services:
  # Serviços Fundamentais
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    stop_grace_period: 60s
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 60s
      timeout: 30s
      retries: 10
    networks:
      - leads-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service={{.Name}}"

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: leadsdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - leads-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service={{.Name}}"

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - leads-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service={{.Name}}"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    init: true
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms4g -Xmx4g
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 40s
      timeout: 15s
      retries: 7
    stop_grace_period: 90s
    networks:
      - leads-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service={{.Name}}"

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.9.2
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - leads-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # Serviços de Armazenamento e Processamento de Dados
  # datalake:
  #   build: ./datalake
  #   restart: always
  #   environment:
  #     - ELASTICSEARCH_HOST=elasticsearch
  #     - ELASTICSEARCH_PORT=9200
  #     - RABBITMQ_HOST=rabbitmq
  #     - RABBITMQ_PORT=5672
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #   ports:
  #     - "8087:8087"
  #   command: python main.py

  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     elasticsearch:
  #       condition: service_healthy
  #   networks:
  #     - leads-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # data-processor:
  #   build: ./data-processor
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - PORT=8081
  #   depends_on:
  #     - db
  #   networks:
  #     - leads-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # Serviços de Scraping e Fetching
  # scrapper:
  #   build: ./scrapper
  #   environment:
  #     - RABBITMQ_HOST=rabbitmq
  #     - RABBITMQ_PORT=5672
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://rabbitmq:15672"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   networks:
  #     - leads-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # link-fetcher:
  #   build: ./link-fetcher
  #   environment:
  #     - RABBITMQ_HOST=rabbitmq
  #     - RABBITMQ_PORT=5672
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   networks:
  #     - leads-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # website-fetcher:
  #   build: ./website-fetcher
  #   environment:
  #     - RABBITMQ_HOST=rabbitmq
  #     - RABBITMQ_PORT=5672
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #   networks:
  #     - leads-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # validator-service:
  #   build: ./validator-service
  #   ports:
  #     - "8090:8090"
  #   environment:
  #     - PORT=8090
  #   networks:
  #     - leads-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # Serviços de API e Inteligência Artificial
  api:
    build: ./api
    ports:
      - "8085:8085"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - PORT=8085
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbitmq:15672"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - leads-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service={{.Name}}"

  lead-search:
    build: ./lead-search
    ports:
      - "8082:8082"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    volumes:
      - /home/wbruno/projects/LeadsSearch/lead-search/data/geo.db:/usr/src/app/data/geo.db
      - /home/wbruno/projects/LeadsSearch/lead-search:/app/lead-search
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbitmq:15672"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - leads-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}/{{.ID}}"
        labels: "service={{.Name}}"

  # ai:
  #   build: ./ai_service
  #   volumes:
  #     - ./ai:/app/src
  #   depends_on:
  #     - db
  #   command: ["python", "main.py"]
  #   networks:
  #     - leads-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # grafana:
  #   image: grafana/grafana:9.4.3
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin123
  #     - GF_SECURITY_DISABLE_BRUTE_FORCE_LOGIN_PROTECTION=true
  #   depends_on:
  #     loki:
  #       condition: service_started
  #   networks:
  #     - leads-network
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - leads-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # promtail:
  #   image: grafana/promtail:2.7.1
  #   networks:
  #     - leads-network
  #   volumes:
  #     - /var/log:/var/log
  #     - ./promtail/promtail-config.yml:/etc/promtail/config.yml
  #   command: -config.file=/etc/promtail/config.yml
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # loki:
  #   image: grafana/loki:2.7.1
  #   ports:
  #     - "3100:3100"
  #   networks:
  #     - leads-network
  #   volumes:
  #     - loki_data:/loki
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # redis-exporter:
  #   image: oliver006/redis_exporter
  #   ports:
  #     - "9121:9121"
  #   environment:
  #     REDIS_ADDR: redis:6379
  #   networks:
  #     - leads-network
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #       tag: "{{.Name}}/{{.ID}}"
  #       labels: "service={{.Name}}"

  # rabbitmq-exporter:
  #   image: kbudde/rabbitmq-exporter
  #   ports:
    #   - "9419:9419"
    # environment:
    #   RABBIT_URL: http://rabbitmq:15672
    #   RABBIT_USER: guest
    #   RABBIT_PASSWORD: guest
    # networks:
    #   - leads-network
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"
    #     tag: "{{.Name}}/{{.ID}}"
    #     labels: "service={{.Name}}"

networks:
  leads-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  # loki_data:
  # grafana_data: